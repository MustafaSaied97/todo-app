{"ast":null,"code":"var _jsxFileName = \"/home/hmaserv/Desktop/github/todo-app/src/views/pages/WeatherPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUID, LocalStorage, convertTempTo, ENDPOINTS, getCurrentLocation, callApi } from 'src/utils';\nimport { ModalForm, Task, WeatherCard } from 'src/components';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport moment from 'moment';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Skeleton from '@mui/material/Skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherPage() {\n  _s();\n  const [isLoading, setisLoading] = useState(false);\n  const [weatherList, setWeatherList] = useState([]);\n  const [weatherDataArr, setWeatherDataArr] = useState([]);\n  const [value, setValue] = useState(0);\n  const numberOfDay = 24 / 3;\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setWeatherDataArr(weatherList[newValue]);\n  };\n  const getWeatherData = async () => {\n    let coordinates = await getCurrentLocation();\n    try {\n      setisLoading(true);\n      let {\n        list\n      } = await callApi({\n        method: ENDPOINTS.getHourlyWeather.method,\n        url: `${ENDPOINTS.getHourlyWeather.url}?lat=${coordinates === null || coordinates === void 0 ? void 0 : coordinates.lat}&lon=${coordinates === null || coordinates === void 0 ? void 0 : coordinates.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n      });\n      const res = list.reduce((acc, curr, i) => {\n        if (!(i % numberOfDay)) {\n          // if index is 0 or can be divided by the `size`...\n          acc.push(list.slice(i, i + numberOfDay)); // ..push a chunk of the original array to the accumulator\n        }\n        return acc;\n      }, []);\n      setWeatherList(res);\n      setWeatherDataArr(res[0]);\n    } catch (err) {} finally {\n      setisLoading(false);\n    }\n  };\n  useEffect(() => {\n    getWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 5,\n      bgcolor: 'background.paper',\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: value,\n      onChange: handleChange,\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      \"aria-label\": \"scrollable auto tabs example\",\n      children: weatherList.map((weatherListItem, index) => /*#__PURE__*/_jsxDEV(Tab, {\n        label: moment(weatherListItem[0].dt_txt).format('dddd')\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: weatherDataArr.map((weatherData, index) => {\n            var _weatherData$weather$, _weatherData$weather$2, _weatherData$main;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: moment(weatherData.dt_txt).format('LT')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://openweathermap.org/img/wn/${weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$ = weatherData.weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.icon}@2x.png`,\n                  width: \"50\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$2 = weatherData.weather[0]) === null || _weatherData$weather$2 === void 0 ? void 0 : _weatherData$weather$2.main\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [convertTempTo(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp, 'K-C'), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherPage, \"Ath8lvhM3n0P65KOLXf1ugaaNy4=\");\n_c = WeatherPage;\nvar _c;\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"names":["React","useEffect","useState","getUID","LocalStorage","convertTempTo","ENDPOINTS","getCurrentLocation","callApi","ModalForm","Task","WeatherCard","Tabs","Tab","Box","moment","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Skeleton","jsxDEV","_jsxDEV","WeatherPage","_s","isLoading","setisLoading","weatherList","setWeatherList","weatherDataArr","setWeatherDataArr","value","setValue","numberOfDay","handleChange","event","newValue","getWeatherData","coordinates","list","method","getHourlyWeather","url","lat","lon","process","env","REACT_APP_WEATHER_API_KEY","res","reduce","acc","curr","i","push","slice","err","sx","mt","bgcolor","display","justifyContent","flexDirection","alignItems","gap","children","onChange","variant","scrollButtons","map","weatherListItem","index","label","dt_txt","format","fileName","_jsxFileName","lineNumber","columnNumber","component","minWidth","weatherData","_weatherData$weather$","_weatherData$weather$2","_weatherData$main","border","align","src","weather","icon","width","alt","main","temp","_c","$RefreshReg$"],"sources":["/home/hmaserv/Desktop/github/todo-app/src/views/pages/WeatherPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getUID, LocalStorage,convertTempTo, ENDPOINTS, getCurrentLocation, callApi } from 'src/utils';\nimport { ModalForm, Task, WeatherCard } from 'src/components';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport moment from 'moment'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Skeleton from '@mui/material/Skeleton';\n\nexport default function WeatherPage() {\n  const [isLoading, setisLoading] = useState(false);\n  const [weatherList, setWeatherList] = useState([]);\n  const [weatherDataArr, setWeatherDataArr] = useState([]);\n  const [value, setValue] = useState(0);\n  const numberOfDay = 24/3;\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setWeatherDataArr(weatherList[newValue])\n  };\n  const getWeatherData = async () => {\n    let coordinates = await getCurrentLocation();\n    try {\n      setisLoading(true);\n      let {list} = await callApi({\n        method: ENDPOINTS.getHourlyWeather.method,\n        url: `${ENDPOINTS.getHourlyWeather.url}?lat=${coordinates?.lat}&lon=${coordinates?.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`,\n      });\n      const res = list.reduce((acc, curr, i) => {\n        if ( !(i % numberOfDay)  ) {    // if index is 0 or can be divided by the `size`...\n          acc.push(list.slice(i, i + numberOfDay));   // ..push a chunk of the original array to the accumulator\n        }\n        return acc;\n      }, []);\n      setWeatherList(res)\n      setWeatherDataArr(res[0])\n\n      \n    } catch (err) {\n    } finally {\n      setisLoading(false);\n    }\n  };\n  useEffect(() => {\n    getWeatherData();\n  }, []);\n\n\n  return (\n    <Box sx={{mt:5, bgcolor: 'background.paper', display: 'flex', justifyContent: 'center',flexDirection:'column', alignItems:'center', gap:5 }}>\n      <Tabs value={value} onChange={handleChange} variant='scrollable' scrollButtons='auto' aria-label='scrollable auto tabs example'>\n        {/* {weatherList.map((weatherListItem,index)=><Tab label={moment(weatherListItem[0].dt_txt).format('dddd')} key={index} />)} */}\n        {weatherList.map((weatherListItem,index)=><Tab label={moment(weatherListItem[0].dt_txt).format('dddd')} key={index} />)}\n      </Tabs>\n      <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableBody>\n          {weatherDataArr.map((weatherData,index) => (\n\n            <TableRow\n              key={index}\n              sx={{ '&:last-child td, &:last-child th': { border: 0},  }}\n            >\n              <TableCell align=\"center\">{moment(weatherData.dt_txt).format('LT')}</TableCell>\n              <TableCell align=\"center\">\n                <img src={`https://openweathermap.org/img/wn/${weatherData?.weather[0]?.icon}@2x.png`} width=\"50\" alt=\"\" />\n              </TableCell>\n              <TableCell align=\"center\">{weatherData?.weather[0]?.main}</TableCell>\n              <TableCell align=\"center\">{convertTempTo(weatherData?.main?.temp,'K-C')}°C</TableCell>\n            </TableRow>\n            \n          ))}\n        </TableBody>\n\n      </Table>\n    </TableContainer>\n\n    </Box>\n  );\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,YAAY,EAACC,aAAa,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,OAAO,QAAQ,WAAW;AACtG,SAASC,SAAS,EAAEC,IAAI,EAAEC,WAAW,QAAQ,gBAAgB;AAC7D,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMkC,WAAW,GAAG,EAAE,GAAC,CAAC;EAExB,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,QAAQ,CAACI,QAAQ,CAAC;IAClBN,iBAAiB,CAACH,WAAW,CAACS,QAAQ,CAAC,CAAC;EAC1C,CAAC;EACD,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIC,WAAW,GAAG,MAAMlC,kBAAkB,CAAC,CAAC;IAC5C,IAAI;MACFsB,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QAACa;MAAI,CAAC,GAAG,MAAMlC,OAAO,CAAC;QACzBmC,MAAM,EAAErC,SAAS,CAACsC,gBAAgB,CAACD,MAAM;QACzCE,GAAG,EAAG,GAAEvC,SAAS,CAACsC,gBAAgB,CAACC,GAAI,QAAOJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,GAAI,QAAOL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEM,GAAI,UAASC,OAAO,CAACC,GAAG,CAACC,yBAA0B;MACxI,CAAC,CAAC;MACF,MAAMC,GAAG,GAAGT,IAAI,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,EAAEC,CAAC,KAAK;QACxC,IAAK,EAAEA,CAAC,GAAGnB,WAAW,CAAC,EAAI;UAAK;UAC9BiB,GAAG,CAACG,IAAI,CAACd,IAAI,CAACe,KAAK,CAACF,CAAC,EAAEA,CAAC,GAAGnB,WAAW,CAAC,CAAC,CAAC,CAAG;QAC9C;QACA,OAAOiB,GAAG;MACZ,CAAC,EAAE,EAAE,CAAC;MACNtB,cAAc,CAACoB,GAAG,CAAC;MACnBlB,iBAAiB,CAACkB,GAAG,CAAC,CAAC,CAAC,CAAC;IAG3B,CAAC,CAAC,OAAOO,GAAG,EAAE,CACd,CAAC,SAAS;MACR7B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EACD5B,SAAS,CAAC,MAAM;IACduC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEf,OAAA,CAACX,GAAG;IAAC6C,EAAE,EAAE;MAACC,EAAE,EAAC,CAAC;MAAEC,OAAO,EAAE,kBAAkB;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAACC,aAAa,EAAC,QAAQ;MAAEC,UAAU,EAAC,QAAQ;MAAEC,GAAG,EAAC;IAAE,CAAE;IAAAC,QAAA,gBAC1I1C,OAAA,CAACb,IAAI;MAACsB,KAAK,EAAEA,KAAM;MAACkC,QAAQ,EAAE/B,YAAa;MAACgC,OAAO,EAAC,YAAY;MAACC,aAAa,EAAC,MAAM;MAAC,cAAW,8BAA8B;MAAAH,QAAA,EAE5HrC,WAAW,CAACyC,GAAG,CAAC,CAACC,eAAe,EAACC,KAAK,kBAAGhD,OAAA,CAACZ,GAAG;QAAC6D,KAAK,EAAE3D,MAAM,CAACyD,eAAe,CAAC,CAAC,CAAC,CAACG,MAAM,CAAC,CAACC,MAAM,CAAC,MAAM;MAAE,GAAMH,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnH,CAAC,eACPvD,OAAA,CAACN,cAAc;MAAC8D,SAAS,EAAE3D,KAAM;MAAA6C,QAAA,eACjC1C,OAAA,CAACT,KAAK;QAAC2C,EAAE,EAAE;UAAEuB,QAAQ,EAAE;QAAI,CAAE;QAAC,cAAW,cAAc;QAAAf,QAAA,eACrD1C,OAAA,CAACR,SAAS;UAAAkD,QAAA,EACPnC,cAAc,CAACuC,GAAG,CAAC,CAACY,WAAW,EAACV,KAAK;YAAA,IAAAW,qBAAA,EAAAC,sBAAA,EAAAC,iBAAA;YAAA,oBAEpC7D,OAAA,CAACJ,QAAQ;cAEPsC,EAAE,EAAE;gBAAE,kCAAkC,EAAE;kBAAE4B,MAAM,EAAE;gBAAC;cAAI,CAAE;cAAApB,QAAA,gBAE3D1C,OAAA,CAACP,SAAS;gBAACsE,KAAK,EAAC,QAAQ;gBAAArB,QAAA,EAAEpD,MAAM,CAACoE,WAAW,CAACR,MAAM,CAAC,CAACC,MAAM,CAAC,IAAI;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/EvD,OAAA,CAACP,SAAS;gBAACsE,KAAK,EAAC,QAAQ;gBAAArB,QAAA,eACvB1C,OAAA;kBAAKgE,GAAG,EAAG,qCAAoCN,WAAW,aAAXA,WAAW,wBAAAC,qBAAA,GAAXD,WAAW,CAAEO,OAAO,CAAC,CAAC,CAAC,cAAAN,qBAAA,uBAAvBA,qBAAA,CAAyBO,IAAK,SAAS;kBAACC,KAAK,EAAC,IAAI;kBAACC,GAAG,EAAC;gBAAE;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClG,CAAC,eACZvD,OAAA,CAACP,SAAS;gBAACsE,KAAK,EAAC,QAAQ;gBAAArB,QAAA,EAAEgB,WAAW,aAAXA,WAAW,wBAAAE,sBAAA,GAAXF,WAAW,CAAEO,OAAO,CAAC,CAAC,CAAC,cAAAL,sBAAA,uBAAvBA,sBAAA,CAAyBS;cAAI;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACrEvD,OAAA,CAACP,SAAS;gBAACsE,KAAK,EAAC,QAAQ;gBAAArB,QAAA,GAAE9D,aAAa,CAAC8E,WAAW,aAAXA,WAAW,wBAAAG,iBAAA,GAAXH,WAAW,CAAEW,IAAI,cAAAR,iBAAA,uBAAjBA,iBAAA,CAAmBS,IAAI,EAAC,KAAK,CAAC,EAAC,OAAE;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA,GARjFP,KAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASF,CAAC;UAAA,CAEZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AAEV;AAACrD,EAAA,CAtEuBD,WAAW;AAAAsE,EAAA,GAAXtE,WAAW;AAAA,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}