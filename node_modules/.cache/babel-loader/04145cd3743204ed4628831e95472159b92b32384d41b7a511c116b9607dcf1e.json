{"ast":null,"code":"var _jsxFileName = \"/home/hmaserv/Desktop/github/todo-app/src/views/pages/WeatherPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport useFetch from 'src/hooks/useFetch';\nimport { ENDPOINTS, getCurrentLocation } from 'src/utils';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherPage() {\n  _s();\n  const [coordinates, setCoordinates] = useState({});\n  const {\n    data,\n    loading,\n    error\n  } = useFetch({\n    url: `${ENDPOINTS.getCurrentWeather.url}?lat=${coordinates === null || coordinates === void 0 ? void 0 : coordinates.lat}&lon=${coordinates === null || coordinates === void 0 ? void 0 : coordinates.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`,\n    method: ENDPOINTS.getCurrentWeather.method\n  }, [coordinates]);\n  useEffect(() => {\n    (async () => {\n      let coordinates = await getCurrentLocation();\n      setCoordinates(coordinates);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), process.env.REACT_APP_WEATHER_API_KEY]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherPage, \"mJze0zvhIVETLpcotEumfno7goM=\", false, function () {\n  return [useFetch];\n});\n_c = WeatherPage;\nvar _c;\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"names":["React","useEffect","useState","useFetch","ENDPOINTS","getCurrentLocation","axios","jsxDEV","_jsxDEV","WeatherPage","_s","coordinates","setCoordinates","data","loading","error","url","getCurrentWeather","lat","lon","process","env","REACT_APP_WEATHER_API_KEY","method","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hmaserv/Desktop/github/todo-app/src/views/pages/WeatherPage.jsx"],"sourcesContent":["import React, { useEffect,useState } from 'react'\nimport useFetch from 'src/hooks/useFetch';\nimport {ENDPOINTS,getCurrentLocation} from 'src/utils'\nimport axios from 'axios';\n\nexport default function WeatherPage() {\n  const [coordinates, setCoordinates] = useState({}) \n  \n  const { data, loading, error } = useFetch({\n    url:`${ENDPOINTS.getCurrentWeather.url}?lat=${coordinates?.lat}&lon=${coordinates?.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`,\n    method:ENDPOINTS.getCurrentWeather.method,\n  },[coordinates])\n\n  useEffect(()=>{\n    (async () => {\n      let coordinates=await getCurrentLocation()\n      setCoordinates(coordinates)\n    })();\n    },[])\n  \n  return (\n    <div>\n      <p>{loading}</p>\n      {process.env.REACT_APP_WEATHER_API_KEY}\n      {/* {JSON.stringify(data)} */}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,SAAQC,SAAS,EAACC,kBAAkB,QAAO,WAAW;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,MAAM;IAAEW,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGZ,QAAQ,CAAC;IACxCa,GAAG,EAAE,GAAEZ,SAAS,CAACa,iBAAiB,CAACD,GAAI,QAAOL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,GAAI,QAAOP,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEQ,GAAI,UAASC,OAAO,CAACC,GAAG,CAACC,yBAA0B,EAAC;IACvIC,MAAM,EAACnB,SAAS,CAACa,iBAAiB,CAACM;EACrC,CAAC,EAAC,CAACZ,WAAW,CAAC,CAAC;EAEhBV,SAAS,CAAC,MAAI;IACZ,CAAC,YAAY;MACX,IAAIU,WAAW,GAAC,MAAMN,kBAAkB,CAAC,CAAC;MAC1CO,cAAc,CAACD,WAAW,CAAC;IAC7B,CAAC,EAAE,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEP,oBACEH,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAIV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfR,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnC,CAAC;AAEV;AAAClB,EAAA,CAtBuBD,WAAW;EAAA,QAGAN,QAAQ;AAAA;AAAA0B,EAAA,GAHnBpB,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}