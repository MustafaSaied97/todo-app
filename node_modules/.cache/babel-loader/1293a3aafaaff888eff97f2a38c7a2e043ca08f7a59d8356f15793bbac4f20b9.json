{"ast":null,"code":"// api.js\nimport axios from 'axios';\nimport router from '@/router/index';\nimport { ENDPOINTS, ROUTESNAMES, notify } from '@/helpers';\nimport { ref } from 'vue';\n\n// Function to make a generic HTTP request\nexport async function callApi({\n  method,\n  url,\n  body = {},\n  headers = {},\n  withFiles = false\n}) {\n  if (!url || !method) {\n    console.error('Both the URL and the method must be provided.');\n    returnPromise.reject({\n      data: {\n        message: 'Both the URL and the method must be provided.'\n      }\n    });\n  }\n  // check network\n  if (!navigator.onLine) {\n    // notify({ type: 'error', msg: 'not_online' });\n    console.error('not_online');\n    return Promise.reject({\n      data: {\n        message: 'not_online'\n      }\n    });\n  }\n  return axios({\n    method,\n    url,\n    ...(body && {\n      data: body\n    }),\n    headers: {\n      Accept: 'application/json',\n      Platform: 'web',\n      'Content-Type': withFiles ? 'multipart/form-data' : 'application/json',\n      ...headers\n    }\n  }).then(response => response.data).catch(error => {\n    const errorResponse = error.response;\n    switch (errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.status) {\n      case 404:\n        {\n          // router.push(ROUTESNAMES.errors._404);\n          break;\n        }\n      default:\n        () => {};\n    }\n    return Promise.reject(errorResponse);\n  });\n}\nexport function useCallApi(options) {\n  const isPending = ref(true);\n  const isSuccess = ref(false);\n  const data = ref(null);\n  const isError = ref(false);\n  const error = ref(null);\n  const errorData = ref(null);\n  {\n    (async () => {\n      try {\n        // isPending.value = true;\n        const res = await callApi(options);\n        if (res !== null && res !== void 0 && res.status) {\n          isSuccess.value = true;\n          data.value = res === null || res === void 0 ? void 0 : res.data;\n        } else {\n          isError.value = true;\n          error.value = res === null || res === void 0 ? void 0 : res.data;\n          errorData.value = res === null || res === void 0 ? void 0 : res.data;\n        }\n      } catch (err) {\n        isError.value = true;\n        error.value = err;\n        errorData.value = err === null || err === void 0 ? void 0 : err.data;\n      } finally {\n        isPending.value = false;\n      }\n    })();\n  }\n  return {\n    isPending,\n    isSuccess,\n    data,\n    isError,\n    error,\n    errorData\n  };\n}","map":{"version":3,"names":["axios","router","ENDPOINTS","ROUTESNAMES","notify","ref","callApi","method","url","body","headers","withFiles","console","error","returnPromise","reject","data","message","navigator","onLine","Promise","Accept","Platform","then","response","catch","errorResponse","status","useCallApi","options","isPending","isSuccess","isError","errorData","res","value","err"],"sources":["/home/hmaserv/Desktop/github/todo-app/src/utils/callApi.js"],"sourcesContent":["// api.js\nimport axios from 'axios';\nimport router from '@/router/index';\nimport { ENDPOINTS, ROUTESNAMES, notify } from '@/helpers';\nimport { ref } from 'vue';\n\n// Function to make a generic HTTP request\nexport async function callApi({ method, url, body = {}, headers = {}, withFiles = false }) {\n    if (!url || !method) {\n        console.error('Both the URL and the method must be provided.');\n        returnPromise.reject({\n            data: {\n                message: 'Both the URL and the method must be provided.'\n            }\n        })\n    }\n    // check network\n    if (!navigator.onLine) {\n        // notify({ type: 'error', msg: 'not_online' });\n        console.error('not_online');\n        return Promise.reject({\n            data: {\n                message: 'not_online'\n            }\n        });\n    }\n\n    return axios({\n        method,\n        url,\n        ...(body && { data: body }),\n        headers: {\n            Accept: 'application/json',\n            Platform: 'web',\n            'Content-Type': withFiles ? 'multipart/form-data' : 'application/json',\n            ...headers,\n        },\n    })\n        .then((response) => response.data)\n        .catch((error) => {\n            const errorResponse = error.response\n            switch (errorResponse?.status) {\n                case 404: {\n                    // router.push(ROUTESNAMES.errors._404);\n                    break;\n                }\n                default:\n                    () => { };\n            }\n            return Promise.reject(errorResponse);\n        });\n}\n\nexport function useCallApi(options) {\n    const isPending = ref(true);\n\n    const isSuccess = ref(false);\n    const data = ref(null);\n\n    const isError = ref(false);\n    const error = ref(null);\n    const errorData = ref(null);\n\n    {\n        (async () => {\n            try {\n                // isPending.value = true;\n                const res = await callApi(options);\n                if (res?.status) {\n                    isSuccess.value = true;\n                    data.value = res?.data;\n                } else {\n                    isError.value = true;\n                    error.value = res?.data;\n                    errorData.value = res?.data;\n                }\n\n            } catch (err) {\n                isError.value = true;\n                error.value = err;\n                errorData.value = err?.data;\n            } finally {\n                isPending.value = false;\n            }\n        })();\n    }\n\n    return {\n        isPending,\n\n        isSuccess,\n        data,\n\n        isError,\n        error,\n        errorData,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}