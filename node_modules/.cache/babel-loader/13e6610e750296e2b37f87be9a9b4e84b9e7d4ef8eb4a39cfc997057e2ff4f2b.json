{"ast":null,"code":"// api.js\nimport axios from 'axios';\n\n// Function to make a generic HTTP request\nexport async function callApi({\n  method,\n  url,\n  body = {},\n  headers = {},\n  withFiles = false\n}) {\n  if (!url || !method) {\n    console.error('Both the URL and the method must be provided.');\n    return Promise.reject({\n      data: {\n        message: 'Both the URL and the method must be provided.'\n      }\n    });\n  }\n  // check network\n  if (!navigator.onLine) {\n    // notify({ type: 'error', msg: 'not_online' });\n    console.error('not_online');\n    return Promise.reject({\n      data: {\n        message: 'not_online'\n      }\n    });\n  }\n  return axios({\n    method,\n    url\n    // ...(body && { data: body }),\n    // headers: {\n    //   Accept: 'application/json',\n    //   Platform: 'web',\n    //   'Content-Type': withFiles ? 'multipart/form-data' : 'application/json',\n    //   ...headers,\n    // },\n  }).then(response => response.data).catch(error => {\n    const errorResponse = error.response;\n    switch (errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.status) {\n      case 404:\n        {\n          break;\n        }\n      default:\n        () => {};\n    }\n    return Promise.reject(errorResponse);\n  });\n}","map":{"version":3,"names":["axios","callApi","method","url","body","headers","withFiles","console","error","Promise","reject","data","message","navigator","onLine","then","response","catch","errorResponse","status"],"sources":["/home/hmaserv/Desktop/github/todo-app/src/utils/callApi.js"],"sourcesContent":["// api.js\nimport axios from 'axios';\n\n\n// Function to make a generic HTTP request\nexport async function callApi({ method, url, body = {}, headers = {}, withFiles = false }) {\n  if (!url || !method) {\n    console.error('Both the URL and the method must be provided.');\n    return Promise.reject({\n      data:{\n        message:'Both the URL and the method must be provided.'\n      }\n    })\n  }\n  // check network\n  if (!navigator.onLine) {\n    // notify({ type: 'error', msg: 'not_online' });\n    console.error('not_online');\n    return Promise.reject({\n      data:{\n        message:'not_online'\n      }\n    });\n  }\n\n  return axios({\n    method,\n    url,\n    // ...(body && { data: body }),\n    // headers: {\n    //   Accept: 'application/json',\n    //   Platform: 'web',\n    //   'Content-Type': withFiles ? 'multipart/form-data' : 'application/json',\n    //   ...headers,\n    // },\n  })\n    .then((response) => response.data)\n    .catch((error) => {\n      const errorResponse=error.response\n      switch (errorResponse?.status) {\n        case 404: {\n          break;\n        }\n        default:\n          () => {};\n      }\n      return Promise.reject(errorResponse);\n    });\n}\n\n\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,OAAO,eAAeC,OAAOA,CAAC;EAAEC,MAAM;EAAEC,GAAG;EAAEC,IAAI,GAAG,CAAC,CAAC;EAAEC,OAAO,GAAG,CAAC,CAAC;EAAEC,SAAS,GAAG;AAAM,CAAC,EAAE;EACzF,IAAI,CAACH,GAAG,IAAI,CAACD,MAAM,EAAE;IACnBK,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC;IAC9D,OAAOC,OAAO,CAACC,MAAM,CAAC;MACpBC,IAAI,EAAC;QACHC,OAAO,EAAC;MACV;IACF,CAAC,CAAC;EACJ;EACA;EACA,IAAI,CAACC,SAAS,CAACC,MAAM,EAAE;IACrB;IACAP,OAAO,CAACC,KAAK,CAAC,YAAY,CAAC;IAC3B,OAAOC,OAAO,CAACC,MAAM,CAAC;MACpBC,IAAI,EAAC;QACHC,OAAO,EAAC;MACV;IACF,CAAC,CAAC;EACJ;EAEA,OAAOZ,KAAK,CAAC;IACXE,MAAM;IACNC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,CAAC,CACCY,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACL,IAAI,CAAC,CACjCM,KAAK,CAAET,KAAK,IAAK;IAChB,MAAMU,aAAa,GAACV,KAAK,CAACQ,QAAQ;IAClC,QAAQE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEC,MAAM;MAC3B,KAAK,GAAG;QAAE;UACR;QACF;MACA;QACE,MAAM,CAAC,CAAC;IACZ;IACA,OAAOV,OAAO,CAACC,MAAM,CAACQ,aAAa,CAAC;EACtC,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}