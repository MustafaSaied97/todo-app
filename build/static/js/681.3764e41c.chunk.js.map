{"version":3,"file":"static/js/681.3764e41c.chunk.js","mappings":"wRAce,SAASA,IACtB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,KAC9CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,GAiCnC,OAJAO,EAAAA,EAAAA,YAAU,KAtBaC,WACrB,IAAIC,QAAoBC,EAAAA,EAAAA,MACxB,IACEX,GAAa,GACb,IAAI,KAAEY,SAAeC,EAAAA,EAAAA,IAAQ,CAC3BC,OAAQC,EAAAA,GAAUC,iBAAiBF,OACnCG,IAAI,GAADC,OAAKH,EAAAA,GAAUC,iBAAiBC,IAAG,SAAAC,OAAmB,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaS,IAAG,SAAAD,OAAmB,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaU,IAAG,WAAAF,OAAUG,sCAElG,MAAMC,EAAMV,EAAKW,QAAO,CAACC,EAAKC,EAAMC,KAC5BA,EAfQ,GAiBZF,EAAIG,KAAKf,EAAKgB,MAAMF,EAAGA,EAjBX,IAmBPF,IACN,IACHrB,EAAemB,GACfjB,EAAkBiB,EAAI,GACxB,CAAE,MAAOO,GACT,CAAC,QACC7B,GAAa,EACf,GAGA8B,EAAgB,GACf,KAGDC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGlC,GACCmC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,EAAGC,QAAS,mBAAoBC,QAAS,OAAQC,eAAgB,SAAUC,cAAe,SAAUC,WAAY,SAAUC,IAAK,GAAIV,SAAA,EAChJF,EAAAA,EAAAA,KAACa,EAAAA,EAAQ,CAACC,UAAU,OAAOC,QAAQ,cAAcC,MAAM,MAAMC,OAAQ,IAAKC,MAAO,CAAEC,aAAc,MACjGnB,EAAAA,EAAAA,KAACa,EAAAA,EAAQ,CAACC,UAAU,OAAOC,QAAQ,cAAcC,MAAM,MAAMC,OAAO,OAAOC,MAAO,CAAEC,aAAc,SAGpGhB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,EAAGC,QAAS,mBAAoBC,QAAS,OAAQC,eAAgB,SAAUC,cAAe,SAAUC,WAAY,SAAUC,IAAK,GAAIV,SAAA,EAChJF,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAAC7C,MAAOA,EAAO8C,SAvCPC,CAACC,EAAOC,KAC3BhD,EAASgD,GACTlD,EAAkBH,EAAYqD,GAAU,EAqCUT,QAAQ,GAAGV,GAAI,CAACoB,WAAW,OAAOC,YAAY,OAAOV,MAAM,OAAOW,SAAS,QAAQC,SAAS,QAASC,eAAa,EAACC,0BAAwB,EAAC,aAAW,gCAA+B5B,SACnO/B,EAAY4D,KAAI,CAACC,EAAgBC,KAAQjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CAACC,MAAOC,IAAOJ,EAAgB,GAAGK,QAAQC,OAAO,SAAcL,QAE3GjC,EAAAA,EAAAA,KAACuC,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAMvC,UAC/BF,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACrC,GAAI,CAAEsC,SAAU,KAAO,aAAW,eAAczC,UACrDF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAS,CAAA1C,SACP7B,EAAe0D,KAAI,CAACc,EAAaZ,KAAK,IAAAa,EAAAC,EAAAC,EAAA,OACrC7C,EAAAA,EAAAA,MAAC8C,EAAAA,EAAQ,CAAa5C,GAAI,CAAE,mCAAoC,CAAE6C,OAAQ,IAAMhD,SAAA,EAC9EF,EAAAA,EAAAA,KAACmD,EAAAA,EAAS,CAACC,MAAM,SAAQlD,SAAEkC,IAAOS,EAAYR,QAAQC,OAAO,SAC7DtC,EAAAA,EAAAA,KAACmD,EAAAA,EAAS,CAACC,MAAM,SAAQlD,UACvBF,EAAAA,EAAAA,KAAA,OAAKqD,IAAG,qCAAAlE,OAAkD,OAAX0D,QAAW,IAAXA,GAAuB,QAAZC,EAAXD,EAAaS,QAAQ,UAAE,IAAAR,OAAZ,EAAXA,EAAyBS,KAAI,WAAWvC,MAAM,KAAKwC,IAAI,QAExGxD,EAAAA,EAAAA,KAACmD,EAAAA,EAAS,CAACC,MAAM,SAAQlD,SAAa,OAAX2C,QAAW,IAAXA,GAAuB,QAAZE,EAAXF,EAAaS,QAAQ,UAAE,IAAAP,OAAZ,EAAXA,EAAyBU,QACpDtD,EAAAA,EAAAA,MAACgD,EAAAA,EAAS,CAACC,MAAM,SAAQlD,SAAA,EAAEwD,EAAAA,EAAAA,IAAyB,OAAXb,QAAW,IAAXA,GAAiB,QAANG,EAAXH,EAAaY,YAAI,IAAAT,OAAN,EAAXA,EAAmBW,KAAM,OAAO,aAN5D1B,EAOJ,cAS7B,C","sources":["views/pages/WeatherPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { convertTempTo, ENDPOINTS, getCurrentLocation, callApi } from 'src/utils';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport moment from 'moment';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Skeleton from '@mui/material/Skeleton';\n\nexport default function WeatherPage() {\n  const [isLoading, setisLoading] = useState(false);\n  const [weatherList, setWeatherList] = useState([]);\n  const [weatherDataArr, setWeatherDataArr] = useState([]);\n  const [value, setValue] = useState(0);\n  const numberOfDay = 24 / 3;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setWeatherDataArr(weatherList[newValue]);\n  };\n  const getWeatherData = async () => {\n    let coordinates = await getCurrentLocation();\n    try {\n      setisLoading(true);\n      let { list } = await callApi({\n        method: ENDPOINTS.getHourlyWeather.method,\n        url: `${ENDPOINTS.getHourlyWeather.url}?lat=${coordinates?.lat}&lon=${coordinates?.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`,\n      });\n      const res = list.reduce((acc, curr, i) => {\n        if (!(i % numberOfDay)) {\n          // if index is 0 or can be divided by the `size`...\n          acc.push(list.slice(i, i + numberOfDay)); // ..push a chunk of the original array to the accumulator\n        }\n        return acc;\n      }, []);\n      setWeatherList(res);\n      setWeatherDataArr(res[0]);\n    } catch (err) {\n    } finally {\n      setisLoading(false);\n    }\n  };\n  useEffect(() => {\n    getWeatherData();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Box sx={{ mt: 5, bgcolor: 'background.paper', display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center', gap: 5 }}>\n          <Skeleton animation='wave' variant='rectangular' width='60%' height={100} style={{ borderRadius: 6 }} />\n          <Skeleton animation='wave' variant='rectangular' width='80%' height='50vh' style={{ borderRadius: 6 }} />\n        </Box>\n      ) : (\n        <Box sx={{ mt: 5, bgcolor: 'background.paper', display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center', gap: 5 }}>\n          <Tabs value={value} onChange={handleChange} variant='' sx={{marginLeft:'auto',marginRight:'auto',width:\"100%\",maxWidth:'700px',overflow:\"auto\"}} scrollButtons allowScrollButtonsMobile aria-label='scrollable force tabs example'>\n        {weatherList.map((weatherListItem,index)=><Tab label={moment(weatherListItem[0].dt_txt).format('dddd')} key={index} />)}\n      </Tabs>\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label='simple table'>\n              <TableBody>\n                {weatherDataArr.map((weatherData, index) => (\n                  <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                    <TableCell align='center'>{moment(weatherData.dt_txt).format('LT')}</TableCell>\n                    <TableCell align='center'>\n                      <img src={`https://openweathermap.org/img/wn/${weatherData?.weather[0]?.icon}@2x.png`} width='50' alt='' />\n                    </TableCell>\n                    <TableCell align='center'>{weatherData?.weather[0]?.main}</TableCell>\n                    <TableCell align='center'>{convertTempTo(weatherData?.main?.temp, 'K-C')}Â°C</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      )}\n    </>\n  );\n}\n"],"names":["WeatherPage","isLoading","setisLoading","useState","weatherList","setWeatherList","weatherDataArr","setWeatherDataArr","value","setValue","useEffect","async","coordinates","getCurrentLocation","list","callApi","method","ENDPOINTS","getHourlyWeather","url","concat","lat","lon","process","res","reduce","acc","curr","i","push","slice","err","getWeatherData","_jsx","_Fragment","children","_jsxs","Box","sx","mt","bgcolor","display","justifyContent","flexDirection","alignItems","gap","Skeleton","animation","variant","width","height","style","borderRadius","Tabs","onChange","handleChange","event","newValue","marginLeft","marginRight","maxWidth","overflow","scrollButtons","allowScrollButtonsMobile","map","weatherListItem","index","Tab","label","moment","dt_txt","format","TableContainer","component","Paper","Table","minWidth","TableBody","weatherData","_weatherData$weather$","_weatherData$weather$2","_weatherData$main","TableRow","border","TableCell","align","src","weather","icon","alt","main","convertTempTo","temp"],"sourceRoot":""}